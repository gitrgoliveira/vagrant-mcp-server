name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CI: 'true'
  GITHUB_ACTIONS: 'true'

jobs:
  lint-test-build:
    name: Lint, Test & Build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: true

    - name: Install dependencies
      run: |
        go mod download
        
    - name: Install required tools
      run: |
        make tools

    - name: Verify CI environment variables
      run: |
        echo "CI environment variable: $CI"
        echo "GITHUB_ACTIONS environment variable: $GITHUB_ACTIONS"
        echo "Verifying CI detection in Go code..."
        if [ "$CI" = "true" ] || [ "$GITHUB_ACTIONS" = "true" ]; then
          echo "✅ CI environment detected correctly"
        else
          echo "❌ CI environment not detected - this will cause test failures"
          exit 1
        fi

    - name: Install Vagrant
      run: |
        wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
        sudo apt update && sudo apt install vagrant
        vagrant --version
        echo "Note: Vagrant is installed but VirtualBox/provider tests will be skipped in CI"
        
    - name: Run full CI pipeline (format, lint, security, test, build)
      env:
        CI: 'true'
        GITHUB_ACTIONS: 'true'
        SKIP_VAGRANT_VALIDATION: 'true'
      run: |
        echo "Running CI pipeline with environment variables:"
        echo "CI=$CI"
        echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
        echo "SKIP_VAGRANT_VALIDATION=$SKIP_VAGRANT_VALIDATION"
        make all
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: vagrant-mcp-server-${{ github.sha }}
        path: bin/vagrant-mcp-server
        retention-days: 30
        
    - name: Check for formatting issues
      run: |
        # Verify that gofmt didn't change any files
        if [ -n "$(git status --porcelain)" ]; then
          echo "Files were modified by gofmt. Please run 'make fmt' locally and commit the changes."
          git status --porcelain
          exit 1
        fi
